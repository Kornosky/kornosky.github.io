{"version":3,"file":"static/js/745.b5d917fb.chunk.js","mappings":"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","sources":["components/Blogs/Post.js","data/blogs/posts.js","pages/Blog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\n\nconst PostPreview = ({ data }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [loadedPost, setLoadedPost] = useState(null);\n  const handleClick = async (event) => {\n    const targetElement = event.target;\n\n    if (targetElement.tagName !== 'A') {\n      if (loadedPost) {\n        // If the post is already loaded, remove it\n        setLoadedPost(null);\n      } else {\n        try {\n          const response = await axios.get(data.post);\n          setLoadedPost(response.data);\n        } catch (error) {\n          setLoadedPost(null);\n          console.error('Error loading markdown:', error);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"cell-container clickable\" onClick={handleClick}>\n      <div className=\"cell-container\">\n        <article className=\"mini-post\">\n          <header>\n            <h3>\n              <a href={data.link}>{data.title}</a>\n            </h3>\n            <time className=\"published\">\n              {dayjs(data.date).format('MMMM, YYYY')}\n            </time>\n          </header>\n          <a href={data.link} className=\"image\">\n            <img src={`${process.env.PUBLIC_URL}${data.image}`} alt={data.title} />\n          </a>\n          <div className=\"description\">\n            <p>{data.desc}</p>\n          </div>\n        </article>\n      </div>\n      {loadedPost && <ReactMarkdown>{loadedPost}</ReactMarkdown>}\n    </div>\n  );\n};\n\nPostPreview.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    post: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    image: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default PostPreview;\n","const data = [\n  {\n    title: 'Scripting with the Deadline Thinkbox API',\n    post: '2023-07-05-Scripting-With-Thinkbox-Deadline-API.md',\n    subtitle: 'raycaster-simplified!',\n    image: 'deadline.jpg',\n    desc:\n        'This is going to be a blog post about all the caveats, limitations, and uses of the deadline api.',\n  },\n  {\n    title: 'C++ Graphics Raycaster Simplified',\n    post: '2021-03-24-raycaster-simplified.md',\n    subtitle: 'raycaster-simplified!',\n    image: 'ReflectionScene_Loop.gif',\n    desc:\n        'This article simplifies raycasters by abstracting complex math and focuses on core concepts for easy application in C++ projects. Peripheral topics like window creation are excluded.',\n  },\n].map((item) => {\n  // Assume the paths of the post and image, appending to the specified vaule\n  // Match dates from post name, give my birth date if invalid.\n  const { post, ...rest } = item;\n  const match = post.match(/^(\\d{4}-\\d{2}-\\d{2})-/);\n  const date = match ? match[1] : '1998-06-22';\n  return {\n    ...rest, post: `blogs/${item.post}`, image: `/images/blog/${item.image}`, date,\n  };\n});\n\nexport default data;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport PostPreview from '../components/Blogs/Post';\nimport data from '../data/blogs/posts';\n\nconst Blogs = () => (\n  <Main title=\"Blogs\" description=\"Learn about Chris Kornosky's Blogs.\">\n    <article className=\"post\" id=\"Blogs\">\n      <header>\n        <div className=\"title\">\n          <h2>\n            <Link to=\"/Blogs\">Blogs</Link>\n          </h2>\n          <p>Blogs documenting various skills and knowledge I&apos;d like to share.</p>\n        </div>\n      </header>\n      {data.map((project) => (\n        <PostPreview data={project} key={project.title} />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Blogs;\n"],"names":["_ref","data","_useState","useState","_useState2","_slicedToArray","loadedPost","setLoadedPost","handleClick","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","wrap","_context","prev","next","target","tagName","axios","post","sent","t0","console","error","stop","_x","apply","arguments","_jsxs","className","onClick","children","_jsx","href","link","title","dayjs","date","format","src","concat","process","image","alt","desc","ReactMarkdown","subtitle","map","item","rest","_objectWithoutProperties","_excluded","match","_objectSpread","Main","description","id","Link","to","project","PostPreview"],"sourceRoot":""}