{"version":3,"file":"static/js/913.ef1cbb5d.chunk.js","mappings":"gRAsDA,EAhDoB,SAAHA,GAAkB,IAAZC,EAAID,EAAJC,KAErBC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,GAAFF,EAAA,GAAeA,EAAA,IAE1BG,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOC,EAAAA,EAAAA,IAAU,GAADC,OAAIlB,EAAKmB,KAAI,QAAO,KAAD,EAA7CP,EAAQE,EAAAM,KACdf,EAAcO,EAASZ,MAAMc,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE7BQ,QAAQC,MAAM,0BAAyBT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAb,EAAA,kBAEnD,kBAPgB,OAAAJ,EAAAkB,MAAA,KAAAC,UAAA,KASjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA2BC,QAASvB,EAAYwB,UAC7DH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBE,UAC7BC,EAAAA,EAAAA,MAAA,WAASH,UAAU,YAAWE,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAE,SAAAf,OAAWlB,EAAKmB,MAAOW,SAAE9B,EAAKkC,WAExCP,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWE,SACxBK,IAAMnC,EAAKoC,MAAMC,OAAO,oBAG7BV,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAE,SAAAf,OAAWlB,EAAKmB,MAAQS,UAAU,QAAOE,UAC/CH,EAAAA,EAAAA,KAAA,OAAKW,IAAG,GAAApB,OAAKqB,IAAsBrB,OAAGlB,EAAKwC,OAASC,IAAKzC,EAAKkC,WAEhEP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UAC1BH,EAAAA,EAAAA,KAAA,KAAAG,SAAI9B,EAAK0C,eAMrB,E,+BCbA,EA5Ba,CACX,CACER,MAAO,2CACPf,KAAM,kDACNwB,SAAU,wBACVH,MAAO,eACPE,KACI,qGAEN,CACER,MAAO,oCACPf,KAAM,kCACNwB,SAAU,wBACVH,MAAO,2BACPE,KACI,2LAENE,KAAI,SAACC,GAGL,IAAQ1B,EAAkB0B,EAAlB1B,KAAS2B,GAAIC,EAAAA,EAAAA,GAAKF,EAAIG,GACxBC,EAAQ9B,EAAK8B,MAAM,yBACnBb,EAAOa,EAAQA,EAAM,GAAK,aAChC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKJ,GAAI,IAAE3B,KAAK,GAADD,OAAK2B,EAAK1B,MAAQqB,MAAM,gBAADtB,OAAkB2B,EAAKL,OAASJ,KAAAA,GAExE,ICAA,EAlBa,WAAH,OACRT,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACjB,MAAM,OAAOkB,YAAY,qCAAoCtB,UACjEC,EAAAA,EAAAA,MAAA,WAASH,UAAU,OAAOyB,GAAG,OAAMvB,SAAA,EACjCH,EAAAA,EAAAA,KAAA,UAAAG,UACEC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,QAAOE,SAAA,EACpBH,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAG,QAAOH,SAAC,aAEnBH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,2EAGN9B,EAAAA,KAAS,SAACmB,GAAI,OACbQ,EAAAA,EAAAA,KAAC2B,EAAW,CAACtD,KAAMmB,GAAWA,EAAKe,MAAS,QAG3C,C","sources":["components/Blogs/PostPreview.js","data/blogs/posts.js","pages/Blog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst PostPreview = ({ data }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [loadedPost, setLoadedPost] = useState('');\n\n  const handleClick = async () => {\n    try {\n      const response = await axios.get(`${data.post}.md`);\n      setLoadedPost(response.data);\n    } catch (error) {\n      console.error('Error loading markdown:', error);\n    }\n  };\n\n  return (\n    <div className=\"cell-container clickable\" onClick={handleClick}>\n      <div className=\"cell-container\">\n        <article className=\"mini-post\">\n          <header>\n            <h3>\n              <Link to={`/blog/${data.post}`}>{data.title}</Link>\n            </h3>\n            <time className=\"published\">\n              {dayjs(data.date).format('MMMM, YYYY')}\n            </time>\n          </header>\n          <Link to={`/blog/${data.post}`} className=\"image\">\n            <img src={`${process.env.PUBLIC_URL}${data.image}`} alt={data.title} />\n          </Link>\n          <div className=\"description\">\n            <p>{data.desc}</p>\n          </div>\n        </article>\n      </div>\n    </div>\n  );\n};\n\nPostPreview.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    post: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    image: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default PostPreview;\n","const data = [\n  {\n    title: 'Scripting with the Deadline Thinkbox API',\n    post: '2023-07-05-Scripting-With-Thinkbox-Deadline-API',\n    subtitle: 'raycaster-simplified!',\n    image: 'deadline.jpg',\n    desc:\n        'This is going to be a blog post about all the caveats, limitations, and uses of the deadline api.',\n  },\n  {\n    title: 'C++ Graphics Raycaster Simplified',\n    post: '2021-03-24-raycaster-simplified',\n    subtitle: 'raycaster-simplified!',\n    image: 'ReflectionScene_Loop.gif',\n    desc:\n        'This article simplifies raycasters by abstracting complex math and focuses on core concepts for easy application in C++ projects. Peripheral topics like window creation are excluded.',\n  },\n].map((item) => {\n  // Assume the paths of the post and image, appending to the specified vaule\n  // Match dates from post name, give my birth date if invalid.\n  const { post, ...rest } = item;\n  const match = post.match(/^(\\d{4}-\\d{2}-\\d{2})-/);\n  const date = match ? match[1] : '1998-06-22';\n  return {\n    ...rest, post: `${item.post}`, image: `/images/blog/${item.image}`, date,\n  };\n});\n\nexport default data;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport PostPreview from '../components/Blogs/PostPreview';\nimport data from '../data/blogs/posts';\n\nconst Blog = () => (\n  <Main title=\"Blog\" description=\"Learn about Chris Kornosky's Blog.\">\n    <article className=\"post\" id=\"Blog\">\n      <header>\n        <div className=\"title\">\n          <h2>\n            <Link to=\"/blog\">Blogs</Link>\n          </h2>\n          <p>Blogs documenting various skills and knowledge I&apos;d like to share.</p>\n        </div>\n      </header>\n      {data.map((post) => (\n        <PostPreview data={post} key={post.title} />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Blog;\n"],"names":["_ref","data","_useState","useState","_useState2","_slicedToArray","setLoadedPost","handleClick","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","post","sent","t0","console","error","stop","apply","arguments","_jsx","className","onClick","children","_jsxs","Link","to","title","dayjs","date","format","src","process","image","alt","desc","subtitle","map","item","rest","_objectWithoutProperties","_excluded","match","_objectSpread","Main","description","id","PostPreview"],"sourceRoot":""}