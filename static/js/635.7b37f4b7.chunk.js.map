{"version":3,"file":"static/js/635.7b37f4b7.chunk.js","mappings":"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","sources":["../node_modules/dayjs/dayjs.min.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=function(t){return t instanceof b},S=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new b(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var b=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,f=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=O.p(f),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return O.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return O.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return O.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return O.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return O.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return O.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return O.s(e.$s,2,\"0\");case\"SSS\":return O.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=O.p(d),m=w(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return O.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:O.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),_=b.prototype;return w.prototype=_,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){_[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,b,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.4.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["module","exports","t","e","n","r","i","s","u","a","o","c","f","h","d","l","$","y","M","name","weekdays","split","months","ordinal","m","String","length","Array","join","v","z","utcOffset","Math","abs","floor","date","year","month","clone","add","ceil","p","w","D","ms","Q","toLowerCase","replace","g","b","S","args","arguments","O","locale","$L","utc","$u","x","$x","$offset","this","parse","prototype","$d","Date","NaN","test","match","substring","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","Number","round","subtract","format","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","_","forEach","extend","$i","isDayjs","en","Ls","hasOwn","Object","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","value","newValue","writable","getProperty","src","copy","copyIsArray","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","style","TypeError","lineno","column","updatePosition","lines","lastIndexOf","position","start","line","node","Position","whitespace","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","exec","comments","rules","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","Symbol","for","k","q","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","require","StyleToObject","iterator","output","hasIterator","len","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","then","_asyncToGenerator","fn","self","undefined","_defineProperty","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","_regeneratorRuntime","Op","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","reverse","pop","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","bind","thisArg","cache","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isDate","isFile","isBlob","isFileList","isURLSearchParams","_ref","_ref$allOwnKeys","allOwnKeys","getOwnPropertyNames","findKey","_key","_global","globalThis","window","global","isContextDefined","TypedArray","isTypedArray","Uint8Array","isHTMLForm","_ref4","isRegExp","reduceDescriptors","reducer","descriptors","reducedDescriptors","descriptor","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","isFormData","kind","FormData","append","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","_ref2","caseless","assignValue","targetKey","_ref3","stripBOM","charCodeAt","inherits","superConstructor","props","assign","toFlatObject","sourceObj","destObj","propFilter","merged","endsWith","searchString","lastIndex","toArray","forEachEntry","pair","matchAll","regExp","matches","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","delimiter","toCamelCase","p1","p2","noop","toFiniteNumber","defaultValue","isFinite","generateString","size","alphabet","random","isSpecCompliantForm","toJSONObject","stack","visit","reducedValue","isThenable","catch","AxiosError","message","code","config","request","response","captureStackTrace","utils","description","number","fileName","lineNumber","columnNumber","status","from","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","concat","map","token","predicates","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","Buffer","JSON","stringify","some","isFlatArray","el","index","exposedHelpers","build","encode","charMap","encodeURIComponent","AxiosURLSearchParams","params","_pairs","toFormData","encoder","_encode","buildURL","url","serializedParams","serializeFn","serialize","hashmarkIndex","InterceptorManager","_classCallCheck","handlers","_createClass","fulfilled","rejected","synchronous","runWhen","id","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","isStandardBrowserEnv","product","navigator","document","isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","protocols","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","DEFAULT_CONTENT_TYPE","defaults","transitional","transitionalDefaults","adapter","transformRequest","data","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","platform","helpers","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","_Symbol$iterator","_Symbol$toStringTag","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","parseHeaders","tokens","tokensRE","parseTokens","matcher","deleted","deleteHeader","normalized","char","formatHeader","_this$constructor","_len","targets","asStrings","_slicedToArray","first","computed","_len2","_key2","accessors","defineAccessor","accessorName","arg1","arg2","arg3","buildAccessors","accessor","transformData","fns","normalize","isCancel","__CANCEL__","CanceledError","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","now","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","location","requestURL","samplesCount","firstSampleTS","bytes","timestamps","head","tail","chunkLength","startedAt","bytesCount","passed","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","knownAdapters","http","xhr","XMLHttpRequest","onCanceled","requestData","requestHeaders","cancelToken","unsubscribe","signal","removeEventListener","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","settle","responseText","statusText","open","paramsSerializer","onreadystatechange","readyState","responseURL","setTimeout","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","isURLSameOrigin","cookies","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","parseProtocol","send","adapters","nameOrAdapter","throwIfCancellationRequested","throwIfRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","opts","console","warn","assertOptions","schema","allowUnknown","Axios","instanceConfig","interceptors","configOrUrl","contextHeaders","_config","boolean","function","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","promise","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","default","stringifyPosition","point","VFileMessage","_Error","_inherits","_super","_createSuper","place","origin","_this","parts","fatal","ruleId","file","actual","expected","note","_wrapNativeSuper","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","normalizeString","proc","cwd","isUrl","fileUrlOrPath","urlToPath","URL","third","getPathFromURLPosix","order","VFile","bufferLike","messages","history","stored","_toConsumableArray","includes","assertNonEmpty","assertPart","stem","encoding","part","bail","middleware","called","_len3","parameters","_key3","fnExpectsCallback","_len4","_key4","unified","base","frozen","transformers","pipeline","run","middlewareIndex","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","_attachers$freezeInde","_toArray","attacher","transformer","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","plugin","plugins","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","tree","runSync","assertDone","process","processSync","destination","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","children","list","items","chunkStart","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","max","limit","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","seen","nok","disable","null","blankLine","after","partial","subtokenize","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","shift","sliceChunks","_point","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","element","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","group","label","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","_document","_flowInitial","_flow","_string","_text","resolveText","extensions","combineExtensions","defaultConstructs","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","hex","fromMarkdown","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","title","depth","referenceType","ancestor","decodeString","fragment","ordered","checked","compiler","postprocess","atCarriageReturn","endPosition","preprocess","combined","_combined$key","_combined$key2","remarkParse","normalizeUri","skip","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","_checks$index","visitParents","is","step","factory","parents","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","_objectSpread","definitions","augment","hName","hProperties","hChildren","ctx","generated","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","Info","attribute","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","pow","types","DefinedInfo","_Info","mask","_assertThisInitialized","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","valid","dash","cap","kebab","camelcase","hastToReact","uriTransformer","uri","colon","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","_unused","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes"],"sourceRoot":""}